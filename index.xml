<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Showcase Template</title><link>https://vcwork.github.io/project/</link><description>Recent content in Introduction on Showcase Template</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://vcwork.github.io/project/index.xml" rel="self" type="application/rss+xml"/><item><title>(1) 3D Brush</title><link>https://vcwork.github.io/project/docs/Entrega2/3Dbrush/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcwork.github.io/project/docs/Entrega2/3Dbrush/</guid><description>Entrega 2 - 3D Brush # Introducción # Se presentará un demo que ilustra una aplicación de pintura en 3D que utiliza transformaciones de pantalla a mundo, similares a las empleadas en el Ray-casting, en la cual el usuario será capaz de mover con los dedos de su mano izquierda el mundo y con los dedos de su mano derecha será capaz de dibujar, todo esto a través de la cámara donde los rayos de luz virtuales se &amp;ldquo;emiten&amp;rdquo; o &amp;ldquo;trazan&amp;rdquo; en su camino desde el punto focal de una cámara a través de cada píxel en el sensor de la cámara para determinar qué es visible a lo largo del rayo en el escena 3D.</description></item><item><title>(1) Óscar</title><link>https://vcwork.github.io/project/docs/Entrega3/ShaderExer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcwork.github.io/project/docs/Entrega3/ShaderExer/</guid><description> Entrega Entrega 3 - Shaders # Coloring # Texturing - UV Visualization # Texturing - World # Texturing - Screen #</description></item><item><title>(2) Pruebas Gerson</title><link>https://vcwork.github.io/project/docs/Entrega3/gerson_codes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcwork.github.io/project/docs/Entrega3/gerson_codes/</guid><description> Entrega Entrega 3 - Shaders # Coloring # Texturing - UV Visualization # Texturing - World # Texturing - Screen #</description></item><item><title>(2) Ray Tracing</title><link>https://vcwork.github.io/project/docs/Entrega2/Ray-Tracing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcwork.github.io/project/docs/Entrega2/Ray-Tracing/</guid><description>Entrega 2 - Ray Tracing # Ray tracing # Introducción # El ray tracing es una de las dos soluciones más populares dadas para el renderizado de objetos de tres dimensiones en pantallas de sólo dos. Esta técnica permite la creación de imágenes que se asemejan a la realidad de una forma relativamente sencilla. A continuación se muestra la historia de la técnica, la teoría que se encuentra detrás y una aplicación que permite visualizar a rasgos generales como es el funcionamiento del ray tracing, es decir la realización de una prueba de concepto.</description></item><item><title>(3) Fernando</title><link>https://vcwork.github.io/project/docs/Entrega3/Fernando/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcwork.github.io/project/docs/Entrega3/Fernando/</guid><description> Entrega Entrega 3 - Shaders # Coloring # Texturing - UV Visualization # Texturing - World # Texturing - Screen # Texturing - Texture sampling #</description></item><item><title>(3) Renderización en software</title><link>https://vcwork.github.io/project/docs/Entrega2/rendering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcwork.github.io/project/docs/Entrega2/rendering/</guid><description>Entrega 2 - Renderización en software # Renderizado por software # Se refiere a cuando el proceso de renderizado es realizado sin involucrar unidades de procesamiento gráfico –GPUs–, es decir, usando únicamente CPUs. Este tipo de renderizado tiene la ventaja de no depender del rendimiento y memoria de la GPU, además de no tener que pagar por otro dispositivo. Sin embargo, estas ventajas frecuentemente suelen verse opacadas por las ventajas que ofrece el renderizado en GPU, como que este último es significativamente más rápido debido a que las GPUs están optimizadas para el procesamiento gráfico y la computación paralela.</description></item><item><title>Entrega 1</title><link>https://vcwork.github.io/project/docs/ilusiones/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://vcwork.github.io/project/docs/ilusiones/</guid><description>Entrega 1 - Ilusiones ópticas # Introducción # Se presentará el efecto estroboscópico en el cual se parte de imágenes que se presentan de forma continua generando lo que parece ser un movimiento fluido, esto debido al efecto Phi, dentro de los posibles consecuencias que este efecto puede llegar a tener se encuentra una que relaciona el movimiento y la percepción de los colores en las pantallas de los computadores.</description></item></channel></rss>